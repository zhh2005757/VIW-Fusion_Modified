%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1

imu_topic: "/camera/imu"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/scout/output/"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   # data: [ 9.9088236502258964e-01, -1.1250526996346305e-03,
   #    1.3472517561191955e-01, 8.6160018709190256e-01,
   #    1.4036536568577710e-03, 9.9999706860486126e-01,
   #    -1.9729516203035634e-03, 7.5442761141566539e-01,
   #    -1.3472256100464802e-01, 2.1440704530200213e-03,
   #    9.9088103953917772e-01, -3.7787373062456836e-01, 0., 0., 0., 1. ]
   #data: [0.953657,-0.0289108,0.299503,-0.02994183763037689,
   #       0.0350746,  0.999269,  -0.0152235,0.004559129006155033,
   #       -0.298844,  0.0250229,  0.953974,0.01766686359125119,
   #       0.0,0.0,0.0,1.0]
   #data: [0.9999847501085886, -0.004084374335355552, 0.0037171812644855693, -0.02994183763037689,
   #       0.004086864775194921, 0.999991429191068, -0.0006626316588062752, 0.004559129006155033,
   #       -0.0037144429694941617, 0.0006778131709182729, 0.99999287171596, 0.01766686359125119,
   #        0.0, 0.0, 0.0, 1.0]
   #data: [ 9.9996234917526883e-01, 2.1060026603644273e-03,
   #    8.4181342750160610e-03, 1.5257025547924416e-02,
   #    -2.1055503186337299e-03, 9.9999778136731132e-01,
   #    -6.2596410694704829e-05, -8.0175327064473181e-02,
   #    -8.4182474264756346e-03, 4.4869248583155383e-05,
   #    9.9996456492068619e-01, -4.6383993863718102e-02, 0., 0., 0., 1. ]
   data: [ 0.99993351,-0.00028486,  0.01152765, -0.03033676,
           0.00027945,  0.99999985,  0.00047096,  0.00400522,
           -0.01152778, -0.00046771,  0.99993344,  0.01938157,
           0.,          0.,          0.,          1.        ]



body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   #data: [ 9.9076492737152599e-01, -9.0972773631035593e-04,
   #    1.3558772468752661e-01, 8.5314010024051168e-01,
   #    1.2953607227783196e-03, 9.9999536334958405e-01,
   #    -2.7559608000184725e-03, 7.5566682876056912e-01,
   #    -1.3558458884066660e-01, 2.9061443149201770e-03,
   #    9.9076151196649154e-01, -3.7763005726406085e-01, 0., 0., 0., 1. ]
   #data: [0.973782, -0.0597564, -0.219492, 0.06510852338269565,
   #      0.0891959, 0.987915, 0.126762, 0.004589801762755343,
   #      0.209265, -0.143016, 0.967344, 0.01765349149011269,
   #      0.0, 0.0, 0.0, 1.0]
   #data: [0.9999887972997616, -0.004224561368945015,  0.0021350307295388425, 0.06510852338269565,
   #       0.004225660403089795, 0.9999909415437157, -0.0005105141239311359, 0.004589801762755343,
   #       -0.002132854691210053, 0.0005195303196076303, 0.9999975905066537, 0.01765349149011269,
   #        0.0, 0.0, 0.0, 1.0]
   #data: [ 9.9996045779212972e-01, 2.1182877008045446e-03,
   #    8.6368807662779608e-03, 1.1398179441854817e-01,
   #    -2.1211768790205150e-03, 9.9999769736893207e-01,
   #    3.2536976137648816e-04, -8.0473878933573356e-02,
   #    -8.6361716519642411e-03, -3.4367724732603489e-04,
   #    9.9996264851500705e-01, -4.6480027560902921e-02, 0., 0., 0., 1. ]
   data: [ 0.99996858, -0.00023212,  0.00792353,  0.06400517,
           0.0002056,   0.99999438,  0.0033474,   0.00415678,
           -0.00792426, -0.00334567,  0.99996301,  0.01878793,
           0.,          0.,          0.,          1.       ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1          # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 1.2075446068944201e-02          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 1.6075978387297028e-03         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 2.1473244394473552e-04         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 1.3518087259292092e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.8065         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                     # online estimate time offset between camera and imu
td: 0.00393                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/scout/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
