%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1  
wheel: 0
only_initial_with_wheel: 0 #只利用wheel进行初始化，不加入因子图
plane: 0
num_of_cam: 2

imu_topic: "/imu"
wheel_topic: "/odom"
image0_topic: "/stereo/left/image_raw"
image1_topic: "/stereo/right/image_raw"
output_path: "/home/zhh2005757/viwo_ws/src/VIW-Fusion/output"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 672
image_height: 376
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.

extrinsic_type: 3 # 0 ALL
                  # 1 Only translation
                  # 2 Only Rotation
                  # 3 no z
                  # 4 no rotation and no z

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.009471441780975032,-0.9939081748565041,  0.10980360533243941, -0.0309501,
           0.9984567420628084,  0.0033909183804303744,  -0.055431362078334365,  -0.0771364,
           0.05472134884952806, 0.11015916496574298,  0.9924064350628417,  0.0265125,
           0.,          0.,          0.,          1.        ]



body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.010486169744957197, -0.9940873423040585,  0.10807588128224391,  -0.0297023,
           0.9972728488827708,   0.002500626397312078,  -0.07376050263429253,   0.0416412,
           0.07305412462908822, 0.10855460717295605,  0.9914025378907414,  0.0333939,
           0.,          0.,          0.,          1. ]

# Extrinsic parameter between IMU and Wheel.
estimate_wheel_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
# 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
# 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning.
#If you choose 0 or 1, you should write down the following matrix.

extrinsic_type_wheel: 0 # 0 ALL
                        # 1 Only translation
                        # 2 Only Rotation
                        # 3 no z
                        # 4 no rotation and no z

#wheel to body
body_T_wheel: !!opencv-matrix
  rows: 4
  cols: 4
  dt: d
  data: [  0.228467, -0.00156345,     0.97355,  -1.44084,
          -0.00888818,    -0.99996, 0.000479969,  0.0,
           0.973511, -0.00876275,   -0.228472,  -1.67519,
         0,0,0,1]


#plane noise
#mono:0.01 stereo:0.005
roll_n: 0.005
#mono:0.01  stereo:0.005
pitch_n: 0.005
#mono:0.05 stereo:0.025
zpw_n: 0.0025



#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 200            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1          # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.04          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.004         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.002         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 4e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81         # gravity magnitude

#wheel parameters
# rad/s mono:0.004 stereo:0.002
wheel_gyro_noise_sigma: 0.004
#　m/s mono:0.01  stereo:0.006
wheel_velocity_noise_sigma: 0.01

estimate_wheel_intrinsic: 0
# 0  Have an accurate intrinsic parameters. We will trust the following sx, sy, sw, don't change it.
# 1  Have an initial guess about intrinsic parameters. We will optimize around your initial guess.
# 2  TODO Don't know anything about intrinsic parameters. You don't need to give sx, sy, sw. We will try to calibrate it. Do some rotation movement at beginning.
#If you choose 0 or 1, you should write down the following sx, sy, sw.
# wheel intrinsic
sx: 1.0
sy: 1.0
sw: 1.0

#unsynchronization parameters
estimate_td: 1                     # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

estimate_td_wheel: 0                      # online estimate time offset between camera and wheel
td_wheel: 0.0

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/zhh2005757/viwo_ws/src/VIW-Fusion/output" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
